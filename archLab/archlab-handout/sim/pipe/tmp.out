Y86-64 Processor: pipe-full.hcl
860 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x360, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x4, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x360, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x360 0x0 --> 0x360

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1e
D: instr = irmovq, rA = ----, rB = %rsi, valC = 0x2b8, valP = 0x1e, Stat = AOK
E: instr = irmovq, valC = 0x4, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x360, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x1e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x4 0x0 --> 0x4

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x28
D: instr = irmovq, rA = ----, rB = %rdi, valC = 0x288, valP = 0x28, Stat = AOK
E: instr = irmovq, valC = 0x2b8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x360, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x28, imem_instr = call, f_instr = call
	Execute: ALU: + 0x2b8 0x0 --> 0x2b8
	Writeback: Wrote 0x360 to register %rsp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = call, rA = ----, rB = ----, valC = 0x32, valP = 0x31, Stat = AOK
E: instr = irmovq, valC = 0x288, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x2b8, valA = 0x0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x4, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x32, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x288 0x0 --> 0x288
	Writeback: Wrote 0x4 to register %rdx

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = rrmovq, rA = %rdx, rB = %rax, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = call, valC = 0x32, valA = 0x31, valB = 0x360
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x288, valA = 0x0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x2b8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0xfffffffffffffff8 0x360 --> 0x358
	Writeback: Wrote 0x2b8 to register %rsi

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3e
D: instr = irmovq, rA = ----, rB = %r13, valC = 0x8000000000000000, valP = 0x3e, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x4, valB = 0x0
   srcA = %rdx, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x358, valA = 0x31
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x288, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x3e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x4 0x0 --> 0x4
	Writeback: Wrote 0x288 to register %rdi
	Wrote 0x31 to address 0x358

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x48
D: instr = irmovq, rA = ----, rB = %r14, valC = 0xffffffffffffffff, valP = 0x48, Stat = AOK
E: instr = irmovq, valC = 0x8000000000000000, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r13, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x4, valA = 0x4
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = call, valE = 0x358, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x48, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0x8000000000000000 0x0 --> 0x8000000000000000
	Writeback: Wrote 0x358 to register %rsp

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x52
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0xfffffffffffffff8, valP = 0x52, Stat = AOK
E: instr = irmovq, valC = 0xffffffffffffffff, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r14, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8000000000000000, valA = 0x0
   dstE = %r13, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x4, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x52, imem_instr = jge, f_instr = jge
	Execute: ALU: + 0xffffffffffffffff 0x0 --> 0xffffffffffffffff
	Writeback: Wrote 0x4 to register %rax

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa7
D: instr = jge, rA = ----, rB = ----, valC = 0xa7, valP = 0x5b, Stat = AOK
E: instr = iaddq, valC = 0xfffffffffffffff8, valA = 0x0, valB = 0x4
   srcA = ----, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0xffffffffffffffff, valA = 0x0
   dstE = %r14, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8000000000000000, valM = 0x0, dstE = %r13, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa7, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0xfffffffffffffff8 0x4 --> 0xfffffffffffffffc
	Execute: New cc = Z=0 S=1 O=0
	Writeback: Wrote 0x8000000000000000 to register %r13

Cycle 11. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0xb1
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0x8, valP = 0xb1, Stat = AOK
E: instr = jge, valC = 0xa7, valA = 0x5b, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0xfffffffffffffffc, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0xffffffffffffffff, valM = 0x0, dstE = %r14, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb1, imem_instr = mrmovq, f_instr = mrmovq
	Execute: instr = jge, cc = Z=0 S=1 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xffffffffffffffff to register %r14

Cycle 12. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0xbb
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jge, Cnd = 0, valE = 0x0, valA = 0x5b
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0xfffffffffffffffc, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x5b, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xfffffffffffffffc to register %rdx

Cycle 13. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x65
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0x8, valP = 0x65, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jge, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 14. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x6f
D: instr = mrmovq, rA = %rcx, rB = %rdi, valC = 0x0, valP = 0x6f, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x0, valB = 0xfffffffffffffffc
   srcA = ----, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x6f, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0x8 0xfffffffffffffffc --> 0x4
	Execute: New cc = Z=0 S=0 O=0

Cycle 15. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x79
D: instr = iaddq, rA = ----, rB = %rdi, valC = 0x8, valP = 0x79, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x288
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %rcx, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x79, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x288 --> 0x288

Cycle 16. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = rmmovq, rA = %rcx, rB = %rsi, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x288, valB = 0x288
   srcA = ----, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = mrmovq, Cnd = 1, valE = 0x288, valA = 0x0
   dstE = ----, dstM = %rcx, Stat = AOK
W: instr = iaddq, valE = 0x4, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = iaddq, f_instr = iaddq
	Memory: Read 0x1 from 0x288
	Execute: ALU: + 0x8 0x288 --> 0x290
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x4 to register %rdx

Cycle 17. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8d
D: instr = iaddq, rA = ----, rB = %rsi, valC = 0x8, valP = 0x8d, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x1, valB = 0x2b8
   srcA = %rcx, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x290, valA = 0x288
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = mrmovq, valE = 0x288, valM = 0x1, dstE = ----, dstM = %rcx, Stat = AOK
	Fetch: f_pc = 0x8d, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x2b8 --> 0x2b8
	Writeback: Wrote 0x1 to register %rcx

Cycle 18. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8f
D: instr = andq, rA = %r13, rB = %rcx, valC = 0x0, valP = 0x8f, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x2b8, valB = 0x2b8
   srcA = ----, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2b8, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x290, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8f, imem_instr = cmovl, f_instr = cmovl
	Execute: ALU: + 0x8 0x2b8 --> 0x2c0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x290 to register %rdi
	Wrote 0x1 to address 0x2b8

Cycle 19. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = cmovl, rA = %r14, rB = %rcx, valC = 0x0, valP = 0x91, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x8000000000000000, valB = 0x1
   srcA = %r13, srcB = %rcx, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2c0, valA = 0x2b8
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2b8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = addq, f_instr = addq
	Execute: ALU: & 0x8000000000000000 0x1 --> 0x0
	Execute: New cc = Z=1 S=0 O=0

Cycle 20. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x93
D: instr = addq, rA = %rcx, rB = %rax, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = cmovl, valC = 0x0, valA = 0xffffffffffffffff, valB = 0x0
   srcA = %r14, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x0, valA = 0x8000000000000000
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2c0, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0xffffffffffffffff 0x0 --> 0xffffffffffffffff
	Writeback: Wrote 0x2c0 to register %rsi

Cycle 21. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x9d
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0xffffffffffffffff, valP = 0x9d, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x0, valB = 0x4
   srcA = %rcx, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = cmovl, Cnd = 0, valE = 0xffffffffffffffff, valA = 0xffffffffffffffff
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x0, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x9d, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x0 0x4 --> 0x4
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x0 to register %rcx

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = jg, rA = ----, rB = ----, valC = 0x65, valP = 0xa6, Stat = AOK
E: instr = iaddq, valC = 0xffffffffffffffff, valA = 0x0, valB = 0x4
   srcA = ----, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = cmovl, valE = 0xffffffffffffffff, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0xffffffffffffffff 0x4 --> 0x3
	Execute: New cc = Z=0 S=0 O=0

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6f
D: instr = mrmovq, rA = %rcx, rB = %rdi, valC = 0x0, valP = 0x6f, Stat = AOK
E: instr = jg, valC = 0x65, valA = 0xa6, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x3, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x4, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6f, imem_instr = iaddq, f_instr = iaddq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x4 to register %rax

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x79
D: instr = iaddq, rA = ----, rB = %rdi, valC = 0x8, valP = 0x79, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x290
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %rcx, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0xa6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x3, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x79, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x290 --> 0x290
	Writeback: Wrote 0x3 to register %rdx

Cycle 25. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = rmmovq, rA = %rcx, rB = %rsi, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x290, valB = 0x290
   srcA = ----, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = mrmovq, Cnd = 1, valE = 0x290, valA = 0x0
   dstE = ----, dstM = %rcx, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = iaddq, f_instr = iaddq
	Memory: Read 0x2 from 0x290
	Execute: ALU: + 0x8 0x290 --> 0x298
	Execute: New cc = Z=0 S=0 O=0

Cycle 26. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8d
D: instr = iaddq, rA = ----, rB = %rsi, valC = 0x8, valP = 0x8d, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x2, valB = 0x2c0
   srcA = %rcx, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x298, valA = 0x290
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = mrmovq, valE = 0x290, valM = 0x2, dstE = ----, dstM = %rcx, Stat = AOK
	Fetch: f_pc = 0x8d, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x2c0 --> 0x2c0
	Writeback: Wrote 0x2 to register %rcx

Cycle 27. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8f
D: instr = andq, rA = %r13, rB = %rcx, valC = 0x0, valP = 0x8f, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x2c0, valB = 0x2c0
   srcA = ----, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2c0, valA = 0x2
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x298, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8f, imem_instr = cmovl, f_instr = cmovl
	Execute: ALU: + 0x8 0x2c0 --> 0x2c8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x298 to register %rdi
	Wrote 0x2 to address 0x2c0

Cycle 28. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = cmovl, rA = %r14, rB = %rcx, valC = 0x0, valP = 0x91, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x8000000000000000, valB = 0x2
   srcA = %r13, srcB = %rcx, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2c8, valA = 0x2c0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2c0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = addq, f_instr = addq
	Execute: ALU: & 0x8000000000000000 0x2 --> 0x0
	Execute: New cc = Z=1 S=0 O=0

Cycle 29. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x93
D: instr = addq, rA = %rcx, rB = %rax, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = cmovl, valC = 0x0, valA = 0xffffffffffffffff, valB = 0x0
   srcA = %r14, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x0, valA = 0x8000000000000000
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2c8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0xffffffffffffffff 0x0 --> 0xffffffffffffffff
	Writeback: Wrote 0x2c8 to register %rsi

Cycle 30. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x9d
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0xffffffffffffffff, valP = 0x9d, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x0, valB = 0x4
   srcA = %rcx, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = cmovl, Cnd = 0, valE = 0xffffffffffffffff, valA = 0xffffffffffffffff
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x0, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x9d, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0x0 0x4 --> 0x4
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x0 to register %rcx

Cycle 31. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = jg, rA = ----, rB = ----, valC = 0x65, valP = 0xa6, Stat = AOK
E: instr = iaddq, valC = 0xffffffffffffffff, valA = 0x0, valB = 0x3
   srcA = ----, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = cmovl, valE = 0xffffffffffffffff, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0xffffffffffffffff 0x3 --> 0x2
	Execute: New cc = Z=0 S=0 O=0

Cycle 32. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6f
D: instr = mrmovq, rA = %rcx, rB = %rdi, valC = 0x0, valP = 0x6f, Stat = AOK
E: instr = jg, valC = 0x65, valA = 0xa6, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x4, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6f, imem_instr = iaddq, f_instr = iaddq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x4 to register %rax

Cycle 33. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x79
D: instr = iaddq, rA = ----, rB = %rdi, valC = 0x8, valP = 0x79, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x298
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %rcx, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0xa6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x79, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x298 --> 0x298
	Writeback: Wrote 0x2 to register %rdx

Cycle 34. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = rmmovq, rA = %rcx, rB = %rsi, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x298, valB = 0x298
   srcA = ----, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = mrmovq, Cnd = 1, valE = 0x298, valA = 0x0
   dstE = ----, dstM = %rcx, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = iaddq, f_instr = iaddq
	Memory: Read 0xfffffffffffffffd from 0x298
	Execute: ALU: + 0x8 0x298 --> 0x2a0
	Execute: New cc = Z=0 S=0 O=0

Cycle 35. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8d
D: instr = iaddq, rA = ----, rB = %rsi, valC = 0x8, valP = 0x8d, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0xfffffffffffffffd, valB = 0x2c8
   srcA = %rcx, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2a0, valA = 0x298
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = mrmovq, valE = 0x298, valM = 0xfffffffffffffffd, dstE = ----, dstM = %rcx, Stat = AOK
	Fetch: f_pc = 0x8d, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x2c8 --> 0x2c8
	Writeback: Wrote 0xfffffffffffffffd to register %rcx

Cycle 36. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8f
D: instr = andq, rA = %r13, rB = %rcx, valC = 0x0, valP = 0x8f, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x2c8, valB = 0x2c8
   srcA = ----, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2c8, valA = 0xfffffffffffffffd
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2a0, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8f, imem_instr = cmovl, f_instr = cmovl
	Execute: ALU: + 0x8 0x2c8 --> 0x2d0
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x2a0 to register %rdi
	Wrote 0xfffffffffffffffd to address 0x2c8

Cycle 37. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = cmovl, rA = %r14, rB = %rcx, valC = 0x0, valP = 0x91, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x8000000000000000, valB = 0xfffffffffffffffd
   srcA = %r13, srcB = %rcx, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2d0, valA = 0x2c8
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2c8, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = addq, f_instr = addq
	Execute: ALU: & 0x8000000000000000 0xfffffffffffffffd --> 0x8000000000000000
	Execute: New cc = Z=0 S=1 O=0

Cycle 38. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = addq, rA = %rcx, rB = %rax, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = cmovl, valC = 0x0, valA = 0xffffffffffffffff, valB = 0x0
   srcA = %r14, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x8000000000000000, valA = 0x8000000000000000
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2d0, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0xffffffffffffffff 0x0 --> 0xffffffffffffffff
	Writeback: Wrote 0x2d0 to register %rsi

Cycle 39. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x9d
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0xffffffffffffffff, valP = 0x9d, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xffffffffffffffff, valB = 0x4
   srcA = %rcx, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = cmovl, Cnd = 1, valE = 0xffffffffffffffff, valA = 0xffffffffffffffff
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x8000000000000000, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x9d, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0xffffffffffffffff 0x4 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x8000000000000000 to register %rcx

Cycle 40. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = jg, rA = ----, rB = ----, valC = 0x65, valP = 0xa6, Stat = AOK
E: instr = iaddq, valC = 0xffffffffffffffff, valA = 0x0, valB = 0x2
   srcA = ----, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x3, valA = 0xffffffffffffffff
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = cmovl, valE = 0xffffffffffffffff, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0xffffffffffffffff 0x2 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xffffffffffffffff to register %rcx

Cycle 41. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x6f
D: instr = mrmovq, rA = %rcx, rB = %rdi, valC = 0x0, valP = 0x6f, Stat = AOK
E: instr = jg, valC = 0x65, valA = 0xa6, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x3, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6f, imem_instr = iaddq, f_instr = iaddq
	Execute: instr = jg, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x3 to register %rax

Cycle 42. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x79
D: instr = iaddq, rA = ----, rB = %rdi, valC = 0x8, valP = 0x79, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x2a0
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %rcx, Stat = AOK
M: instr = jg, Cnd = 1, valE = 0x0, valA = 0xa6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x1, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x79, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x2a0 --> 0x2a0
	Writeback: Wrote 0x1 to register %rdx

Cycle 43. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = rmmovq, rA = %rcx, rB = %rsi, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x2a0, valB = 0x2a0
   srcA = ----, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = mrmovq, Cnd = 1, valE = 0x2a0, valA = 0x0
   dstE = ----, dstM = %rcx, Stat = AOK
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = iaddq, f_instr = iaddq
	Memory: Read 0xfffffffffffffffc from 0x2a0
	Execute: ALU: + 0x8 0x2a0 --> 0x2a8
	Execute: New cc = Z=0 S=0 O=0

Cycle 44. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8d
D: instr = iaddq, rA = ----, rB = %rsi, valC = 0x8, valP = 0x8d, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0xfffffffffffffffc, valB = 0x2d0
   srcA = %rcx, srcB = %rsi, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2a8, valA = 0x2a0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = mrmovq, valE = 0x2a0, valM = 0xfffffffffffffffc, dstE = ----, dstM = %rcx, Stat = AOK
	Fetch: f_pc = 0x8d, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x0 0x2d0 --> 0x2d0
	Writeback: Wrote 0xfffffffffffffffc to register %rcx

Cycle 45. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x8f
D: instr = andq, rA = %r13, rB = %rcx, valC = 0x0, valP = 0x8f, Stat = AOK
E: instr = iaddq, valC = 0x8, valA = 0x2d0, valB = 0x2d0
   srcA = ----, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x2d0, valA = 0xfffffffffffffffc
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2a8, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x8f, imem_instr = cmovl, f_instr = cmovl
	Execute: ALU: + 0x8 0x2d0 --> 0x2d8
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x2a8 to register %rdi
	Wrote 0xfffffffffffffffc to address 0x2d0

Cycle 46. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = cmovl, rA = %r14, rB = %rcx, valC = 0x0, valP = 0x91, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x8000000000000000, valB = 0xfffffffffffffffc
   srcA = %r13, srcB = %rcx, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x2d8, valA = 0x2d0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x2d0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = addq, f_instr = addq
	Execute: ALU: & 0x8000000000000000 0xfffffffffffffffc --> 0x8000000000000000
	Execute: New cc = Z=0 S=1 O=0

Cycle 47. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x93
D: instr = addq, rA = %rcx, rB = %rax, valC = 0x0, valP = 0x93, Stat = AOK
E: instr = cmovl, valC = 0x0, valA = 0xffffffffffffffff, valB = 0x0
   srcA = %r14, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x8000000000000000, valA = 0x8000000000000000
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x2d8, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x93, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0xffffffffffffffff 0x0 --> 0xffffffffffffffff
	Writeback: Wrote 0x2d8 to register %rsi

Cycle 48. CC=Z=0 S=1 O=0, Stat=AOK
F: predPC = 0x9d
D: instr = iaddq, rA = ----, rB = %rdx, valC = 0xffffffffffffffff, valP = 0x9d, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xffffffffffffffff, valB = 0x3
   srcA = %rcx, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = cmovl, Cnd = 1, valE = 0xffffffffffffffff, valA = 0xffffffffffffffff
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x8000000000000000, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x9d, imem_instr = jg, f_instr = jg
	Execute: ALU: + 0xffffffffffffffff 0x3 --> 0x2
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x8000000000000000 to register %rcx

Cycle 49. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = jg, rA = ----, rB = ----, valC = 0x65, valP = 0xa6, Stat = AOK
E: instr = iaddq, valC = 0xffffffffffffffff, valA = 0x0, valB = 0x1
   srcA = ----, srcB = %rdx, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x2, valA = 0xffffffffffffffff
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = cmovl, valE = 0xffffffffffffffff, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0xffffffffffffffff 0x1 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0xffffffffffffffff to register %rcx

Cycle 50. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6f
D: instr = mrmovq, rA = %rcx, rB = %rdi, valC = 0x0, valP = 0x6f, Stat = AOK
E: instr = jg, valC = 0x65, valA = 0xa6, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = iaddq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x2, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6f, imem_instr = iaddq, f_instr = iaddq
	Execute: instr = jg, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x2 to register %rax

Cycle 51. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x79
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jg, Cnd = 0, valE = 0x0, valA = 0xa6
   dstE = ----, dstM = ----, Stat = AOK
W: instr = iaddq, valE = 0x0, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa6, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rdx

Cycle 52. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa7
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0xa7, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jg, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xa7, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 53. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa7
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x358, valB = 0x358
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa7, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0x8 0x358 --> 0x360

Cycle 54. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa7
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x360, valA = 0x358
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa7, imem_instr = iaddq, f_instr = iaddq
	Memory: Read 0x31 from 0x358
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 55. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa7
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x360, valM = 0x31, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x31, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x360 to register %rsp

Cycle 56. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x32, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x32, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 57. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = rrmovq, rA = %rdx, rB = %rax, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x34, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 58. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x3e
D: instr = irmovq, rA = ----, rB = %r13, valC = 0x8000000000000000, valP = 0x3e, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rdx, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x3e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 59. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x48
D: instr = irmovq, rA = ----, rB = %r14, valC = 0xffffffffffffffff, valP = 0x48, Stat = AOK
E: instr = irmovq, valC = 0x8000000000000000, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r13, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x48, imem_instr = iaddq, f_instr = iaddq
	Execute: ALU: + 0x8000000000000000 0x0 --> 0x8000000000000000
60 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x0000000000000002
%rcx:	0x0000000000000000	0xffffffffffffffff
%rsp:	0x0000000000000000	0x0000000000000360
%rsi:	0x0000000000000000	0x00000000000002d8
%rdi:	0x0000000000000000	0x00000000000002a8
%r13:	0x0000000000000000	0x8000000000000000
%r14:	0x0000000000000000	0xffffffffffffffff
Changed Memory State:
0x02b8:	0x0000000000cdefab	0x0000000000000001
0x02c0:	0x0000000000cdefab	0x0000000000000002
0x02c8:	0x0000000000cdefab	0xfffffffffffffffd
0x02d0:	0x0000000000cdefab	0xfffffffffffffffc
0x0358:	0x0000000000000000	0x0000000000000031
CPI: 56 cycles/49 instructions = 1.14
